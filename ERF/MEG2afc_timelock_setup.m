function MEG2afc_timelock_setup()% run from runMIBmeg_analysisif ismac%   basepath = '/Users/kloosterman/beegfs/projectdata/MEG2afc/'; %yesno or 2afc  basepath = '/Users/kloosterman/gridmaster2012/kloosterman/projectdata/MEG2afc/'; %yesno or 2afc  backend = 'local';  compile = 'no';else  basepath = '/home/mpib/kloosterman/projectdata/MEG2afc/'; %yesno or 2afc  backend = 'slurm';%     backend = 'torque';%         backend = 'local';  %   compile = 'yes';  compile = 'no';endtimreq = 20; %in minutes per runmemreq = 4000; % in MBPREIN = fullfile(basepath, 'preproczap');% PREOUT = fullfile(basepath, 'freqzap_BLperrun');PREOUT = fullfile(basepath, 'timelock'); % logscaled freq axismkdir(PREOUT)overwrite = 1;SUBJ= [1:5, 7:9, 11:21]; % all% SUBJ= [1:5, 7:9, 11:13, 15:21]; % 14 already run% SUBJ= 15;sesdirs = {'A' 'B' 'C' 'D'};% sesnames = {'plac_ipsi', 'drug_ipsi', 'plac_contra', 'drug_contra'};sesnames = {'ipsi' 'contra'};drugnames = {'drug', 'plac'};%make cells for each subject, to analyze in parallelcfg = [];cfg.PREIN = PREIN;cfg.PREOUT = PREOUT;cfglist = {};for isub = 1:length(SUBJ)%   for ises = 1:4  for idrug = 1:2  for ises = 1:2    cfg.PREIN = PREIN;    cfg.SUBJ = sprintf('NK%d', SUBJ(isub));    cfg.PREOUT = PREOUT;    cfg.sesname = sprintf('%s_%s_%s', cfg.SUBJ, drugnames{idrug},  sesnames{ises});    cfg.outfile = fullfile(PREOUT, sprintf('%s_%s_freq.mat', cfg.SUBJ, sesnames{ises})); % TODO fix    if ~exist(cfg.outfile, 'file') || overwrite%       cfglist{end+1} = cfg;      cfglist{isub, idrug, ises} = cfg;    end  end  endend% cfglist = cfglist(randsample(length(cfglist),length(cfglist)));fprintf('Running MEG2afc_freq for %d cfgs\n', length(cfglist))if strcmp(backend, 'slurm')%   options = '-D. --cpus-per-task=4'; % '--cpus 4' '-D. -c2'  --gres=gpu:1  options = '-D. -c4 '; % '-D. -c2'  --gres=gpu:1else  options =  '-l nodes=1:ppn=4'; % torque %-q testing or gpuendsetenv('TORQUEHOME', 'yes')mkdir('~/qsub'); cd('~/qsub');if strcmp(compile, 'yes')  fun2run = qsubcompile(@MEG2afc_timelock, 'toolbox', {'signal', 'stats'}); %else  fun2run = @MEG2afc_timelock;endif strcmp(backend, 'local')  megdescriptives = cellfun(fun2run, cfglist)else  megdescriptives = qsubcellfun(fun2run, cfglist, 'memreq', memreq*1e6, 'timreq', timreq*60, 'stack', 1, ...    'StopOnError', false, 'backend', backend, 'options', options);endsave(fullfile(PREOUT, 'megdescriptives.mat'), 'megdescriptives')if ~ismac; return; end%% % load(fullfile(PREOUT, 'megdescriptives.mat'), 'megdescriptives')% megdescriptives = arrayfun(@cell2mat, megdescriptives )megdescr=[];for isub = 1:19  for idrug = 1:2    for ises=1:2      if isempty(megdescriptives{isub,idrug, ises}); continue; end      megdescr(isub,idrug, ises,1) = mean([megdescriptives{isub,idrug, ises}.mean]);      megdescr(isub,idrug, ises,2) = mean([megdescriptives{isub,idrug, ises}.std]);    end  endendmegdescr = squeeze(mean(megdescr,3));figure;for imeas = 1%:2  subplot(1,2,imeas)  dat = megdescr(:,:,imeas);  barweb(mean(dat), std(dat)/sqrt(19))  [h,p] = ttest(dat(:,1), dat(:,2));  title(sprintf('p = %g', p))end