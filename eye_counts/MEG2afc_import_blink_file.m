% function [blinks_nr,rt,run_nr,trial_nr] = importfile(filename, startRow, endRow)
function blinkdat = MEG2afc_import_blink_file(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [BLINKS_NR,RT,RUN_NR,TRIAL_NR] = IMPORTFILE(FILENAME) Reads data from
%   text file FILENAME for the default selection.
%
%   [BLINKS_NR,RT,RUN_NR,TRIAL_NR] = IMPORTFILE(FILENAME, STARTROW, ENDROW)
%   Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   [blinks_nr,rt,run_nr,trial_nr] = importfile('nk1_A_pupil_data.csv',2, 641);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/04/21 12:10:33

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column2: double (%f)
%	column3: double (%f)
%   column4: double (%f)
%	column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
nruns = dataArray{:, 4}(end);
blinkdat = cell(1,nruns);

for irun = 1:nruns
    
    run_ind = dataArray{:,4} == irun;

    blinkdat{irun}.trial_nr = dataArray{:, 5}(run_ind);
    blinkdat{irun}.blinks_nr = dataArray{:, 1}(run_ind);
    blinkdat{irun}.rt = dataArray{:, 3}(run_ind);
    blinkdat{irun}.baseline_pupil = dataArray{:, 2}(run_ind);

end
%     blinkdat.blinks_nr = dataArray{:, 1};
% blinkdat.rt = dataArray{:, 2};
% blinkdat.run_nr = dataArray{:, 3};
% blinkdat.trial_nr = dataArray{:, 4};

