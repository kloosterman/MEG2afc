function MIBexp_freqanalysis(cfg1, cfg2, inputfile, outputfile)% do freqanalysis, called by MIBexp_TFR_analysis_peersetupmkdir(fileparts(outputfile));fprintf('Loading %s\n', inputfile);try load(inputfile);    if ~isempty(cfg1.trials)				switch cfg1.trigger			case 'resp' % go to resp-locked				cfg=[];				cfg.offset = -round((data.trialinfo(:,5) / ft_findcfg(data.cfg, 'origfs')) * ft_findcfg(data.cfg, 'resamplefs'));				data = ft_redefinetrial(cfg,data);        end                if cfg1.sourceloc == 0            cfg = [];            cfg.method = 'distance';            cfg.channel = 'MEG';            neighbours = ft_prepare_neighbours(cfg, data);                        cfg=[];            cfg.planarmethod = 'sincos';            cfg.neighbours = neighbours;            data = ft_megplanar(cfg, data);        end                        %         freq = ft_freqanalysis(cfg1, data);        timelock_planar = ft_timelockanalysis(cfg2, data);        freq_cp = ft_combineplanar([], freq);        freq_cp.grad = freq.grad;        freq = freq_cp;        [pathstr, name] = fileparts(outputfile);        fprintf('Saving %s to...\n %s\n', name, pathstr)        save(outputfile, 'freq');        clear all    else        warning('Condition not present in data\n')        return    endcatch ME    disp(getReport(ME))    fid = fopen('/home/nkloost1/NKdet_freq_errorlog.txt', 'at');    fprintf(fid,'%s\n%s\n%s\n\n\n', datestr(now), inputfile, getReport(ME));    fclose('all');end