%% plotTFR_MIBexp% plots SOI-TFRs% average of selected sensors for multiple subjects% sorted according to stimulus condition% dims: pharma(2) diff(2) pupil(2/3) SDT(4)% MEG hh conditions:% drug placebo% easy hard,% pupil hi lo% H, FA, M, CR: Focus on STIM LEFTclose allclear allcd ~% stim left right% resp left or right% NOTE: comb dim levels not put in b/c space limspharm_conds = {'atomox' 'placebo' 'drugscomb'};diff_conds = {'easy' 'hard' 'diffcomb'};pupilconds = {'low_pup' 'high_pup' 'pupcomb'};sdt_conds = {'Hit' 'FA' 'Miss' 'CR' };% addpath(genpath('/Users/niels/Dropbox/PROJECTS/Hamburg_MEG/MEG_Hamburg_shared/scripts/MEG_HH_analysis/'))addpath(genpath('/mnt/homes/home022/nkloost1/Documents/MATLAB/MEG_HH_analysis'))addpath('/mnt/homes/home022/nkloost1/Documents/MATLAB/fieldtrip/')ft_defaults%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%loadrespavg = 0; %load in subj respavgtrigger = 'stim'; %  'stim' respanalysistype = 'full';baseline='trial';AVG = 'totalpow';%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%SUBJ  = { 'NK1' 'NK2'   'NK3'   'NK4'   'NK5'   'NK7'   'NK8'   'NK9'  'NK11'   'NK12'   'NK13'   'NK14'}; %  'NK6' out,  'NK10' don't exist% SUBJ  = { 'NK3'}; %  'NK6' outnsub = length(SUBJ);% sesdirs = {'B' }; % todo keep track of order per subjsesdirs = { 'B' 'D' 'A' 'C'}; % todo keep track of order per subj FIRST drug then placTYP   = '2afc';WIN   = 400;ctr=0;fprintf('loadrespavg=%d; %s; %s; %s %s\n', loadrespavg, trigger, analysistype, baseline, AVG)PREIN = fullfile('/mnt/homes/home022/nkloost1/projectdata/2afc/freq/', trigger);% PREIN = '/Users/niels/Dropbox/PROJECTS/Hamburg_MEG/MEG_Hamburg_shared/scripts/';PREOUT = '/mnt/homes/home022/nkloost1/plots/';mkdir(PREOUT)examplefreqpath = fullfile(PREIN, SUBJ{1}, 'A');% examplefreqpath = '/Users/niels/Dropbox/PROJECTS/Hamburg_MEG/MEG_Hamburg_shared/scripts/NK3/B/';w = what(examplefreqpath);load(fullfile(examplefreqpath, w.mat{end}))respavgout = [PREIN 'respavg/' trigger];mkdir(respavgout)%         corrout = [PREOUT 'corrdat/'];%         mkdir(corrout)soi_optimal_occ % get the sensors of interest (soi) listload('sensorselection.mat')SOINsel = { 'occ-l'    'occ-r'  'occ-spec' 'frontal'}; %  'motor-l' 'motor-r' %         SOIN = {'occ-l', 'occ-r', 'occ-spec', 'frontal'};% set up arrays for analysis%--------------------------------------------------------------------------CUTLO  = 0;  CUTHI  = 200;       % cutoff for reading in dataswitch trigger;    case 'stim';        basetind = find((freq.time>=-0.5) & (freq.time<=0));        TIMLO = -0.5; TIMHI = 2.5; % resp    case 'resp';        basetind = find((freq.time>=-1.5) & (freq.time<=-1));        TIMLO = -1.5; TIMHI = 0.3; % respendfreq.time=round(freq.time*100)/100; %get rid of tiny differences in time axisfrind = find((freq.freq>=CUTLO) & (freq.freq<=CUTHI));faxis = freq.freq(frind);%         basetind = find((freq.time>=TIMLO) & (freq.time<=TIMHI));tind = find((freq.time>=TIMLO) & (freq.time<=TIMHI));% taxis = freq.time(basetind);taxis = freq.time(tind);chlabel = freq.label;basespec = zeros(length(freq.label),length(frind));ntrials = zeros(length(SUBJ),2,2,2,4); % subj pharma diff pupil SDT%         respavg = nan(length(SUBJ),3,length(SOINsel),length(frind),length(taxis),3,2);  % dimensions: subj ses nchan nfreq ntimebins itype ieventrespavg = nan(length(SUBJ),length(chlabel),length(frind),length(taxis),2,2,2,4);  % dimensions: subj nchan nfreq ntimebins pharma(2) diff(2) pupil(2/3) SDT(4)rt = cell(length(SUBJ),2,2,2,4); % subj pharma diff pupil SDTfor isub = 1:length(SUBJ)    if loadrespavg % todo load in respavg        %         fprintf('loading subrespavg %s\n', SUBJ{isub})        %         subjrespavgin = sprintf('%srespavg/%s/%s_%s.mat', PREIN, trigger, SUBJ{isub}, baseline);        %         load(subjrespavgin);        %         respavg(isub,:,:,:,:,:,:)=subjrespavg;        %         clear subjrespavg        break    end    fprintf('processing subject %s %s freq trials %s . . . \n',SUBJ{isub}, TYP, AVG)    %         powdat = nan(nsub, 100, 268, length(faxis), length(taxis), 2,2,2,4);    for ises = 1:4        if ises < 3;    ipharm = 1;     else     ipharm = 2; end % 1= drug, 2= plac                subjdir = fullfile(PREIN, SUBJ{isub}, sesdirs{ises});        try            cd(subjdir)                        runlist = dir([subjdir '/*.mat']);            if isempty(runlist);     continue;            end                        powdat = [];            trialinfo = [];            %concat runs            fprintf('Concatenating runs . . .\n')            for irun = 1:length(runlist)                fprintf('Loading run %d . . .\n', irun)                load(runlist(irun).name); % subj pharma diff pupil SDT                powdat = [powdat; freq.powspctrm];                trialinfo = [trialinfo; freq.trialinfo];            end            ntrl = size(powdat,1);            clear freq                        %compute basespec within session            fprintf('Computing baseline spectrum . . .\n')            if length(size(powdat)) == 4 && size(powdat,1) > 1                basespec = squeeze(nanmean(powdat));            else                basespec = squeeze(powdat); %if only 1 trial            end            basespec = nanmean(basespec(:,:,basetind),3);     %average over basetind timebins            %             basespec = nanmean(basespec(:,:,:),3);     %average over basetind timebins                        %normalize            respdat = nan(ntrl,length(chlabel),length(frind),length(taxis));            fprintf('Normalizing trials . . .\n')            ft_progress('init', 'etf',     'Please wait...');            for ich = 1:length(chlabel)                ft_progress(ich/length(chlabel), 'Processing channel %d from %d', ich, length(chlabel));                basedat = squeeze(repmat(squeeze(basespec(ich,:)),1,size(taxis)));                for itrial = 1:ntrl                    respdat(itrial,ich,:,:) = (squeeze(powdat(itrial,ich,:,:)) - basedat) ./ basedat;                end            end            ft_progress('close')            clear powdat basespec                        %             %% ff plotten            %             close all            %             sensind = match_str(chlabel,ft_channelselection(SOI{3},chlabel)); % occ sensors            %             test = nanmean(respdat(:,sensind,:,:),2);            %             test = squeeze(nanmean(test));            %             figure            %             imagesc(taxis,faxis,test, [-0.05 0.05]);            %             colorbar            %                 set(gca,'Box','off','XTick',[-1 -0.5 0 0.5 1],...    [-0.5,0,0.5,1,1.5,2,2.5]            %                     'YDir','normal','YTick',[0:20:140],...                %                 'YDir','normal','YTick',[15,20,50,100,150,200],...            %                     'TickDir','out', 'FontSize', 12);            fprintf('Concatenating sessions . . .\n')            if ises==1 || ises ==3                respdat_concat = []; % for concatenating 2 sessions                continue % fill it up with the 2nd ses, then go on            else                respdat_concat = [respdat_concat respdat];            end            clear respdat                        % Sessions have been concatenated, so now split up by condition and average over trials            % freq.trialinfo   % 1 difficulty condition% 2 signal location% 3 button% 4 correct % 5 RT% 6 empty% 7 trial index% 8 N button presses in trial (omission = 0)            fprintf('Average across trials and put in respavg . . .\n')            for idiff=1:2 % easy, hard                isdt=0;                for iresp = 1:2 % left or right                    for istim = 1:2 % present (left) or absent                        isdt = isdt+1;                        trialind = find( trialinfo(:,1) == idiff & trialinfo(:,2) == istim & trialinfo(:,3) == iresp ); % todo add pupil                        respavg(isub,:,:,:,ipharm,idiff,1,isdt) =  nanmean(respdat_concat);  % dimensions: subj nchan nfreq ntimebins pharma(2) diff(2) pupil(2/3) SDT(4)                    end                end            end            respdat_concat = []; % for concatenating 2 sessions        catch ME            disp('session not found')        end     end % ises        % save respavg per subj    subjrespavg = respavg(isub,:,:,:,:,:,:,:);    filesave = [respavgout filesep SUBJ{isub} '_' baseline '.mat'];    fprintf('Saving %s . . . \n', filesave)    save(filesave, 'subjrespavg')    clear subjrespavgend %isub[nsub, nses, nchan,nfrq,ntim,ncond,nevent]=size(respavg);respavgdimord = 'nsub_nchan_nfrq_ntim_npharm_ndiff_npup_nsdt'size(respavg)filesave = [respavgout filesep 'respavg_' trigger '.mat'];fprintf('Saving %s . . . \n', filesave)save(filesave, 'respavg',   '-v7.3' )cd ~